# yaml-language-server: $schema=https://raw.githubusercontent.com/fern-api/fern/main/fern.schema.json

imports:
  commons: commons.yml
  pagination: pagination.yml
  connection: connection.yml
  destination: destination.yml
  event: event.yml
  source: source.yml

types:
  Request:
    properties:
      id:
        type: commons.RequestId
        docs: ID of the request
      team_id:
        type: commons.TeamId
        docs: ID of the workspace
      verified:
        type: boolean
        docs: |
          Whether or not the request was verified when received.
          Defaults to false.
      source_id:
        type: source.SourceId
        docs: ID of the associated source
      rejection_cause:
        type: RejectionCause
        docs: Cause for which the request was rejection and not processed.
      original_event_data_id:
        type: commons.RequestId
        docs: ID of the request data
      duplicate_hash:
        type: string
        docs: Hash of the request data payload used to check for duplicates
      duplicate_hits:
        type: integer
        docs: Count of duplicate hits found
      attempts:
        type: integer
        docs: Number of delivery attempts made
      ingest_priority:
        type: IngestPriority
        docs: The priority attributed to the request when received. One of LOW or NORMAL
      ingested_at:
        type: datetime
        docs: The time the request was originally received
      events_count:
        type: integer
        docs: The count of events created from this request (CLI events not included)
      cli_events_count:
        type: integer
        docs: The count of CLI events created from this request
      updated_at:
        type: datetime
        docs: Date the event was last updated
      created_at:
        type: datetime
        docs: Date the event was created

  RejectionCause:
    enum:
      - ARCHIVED_SOURCE
      - NO_WEBHOOK
      - VERIFICATION_FAILED

  IngestPriority:
    enum:
      - LOW
      - NORMAL

  AllRequests:
    extends: pagination.Pagination
    properties:
      count: integer
      models: list<Request>

service:
  docs: |
    A request represents a webhook received by Hookdeck.
  base-path: /requests
  auth: true
  endpoints:
    getAll:
      docs: |
        This endpoint lists all request, or a subset of requests.
        Requests are sorted by ingested_at date.
      method: GET
      path: ""
      response: AllRequests
      request:
        name: GetAllRequestsRequest
        query-parameters:
          id:
            type: optional<commons.RequestId>
            docs: Filter by requests IDs
          rejection_cause:
            type: optional<RejectionCause>
            docs: Filter by rejection cause
          source_id:
            type: optional<source.SourceId>
            docs: Filter by source IDs
          verified:
            type: optional<boolean>
            docs: Filter by verification status
          headers:
            type: optional<string>
            docs: URL Encoded string of the JSON to match to the data headers
          parsed_query:
            type: optional<string>
            docs: URL Encoded string of the JSON to match to the parsed query (JSON
              representation of the query)
          path:
            type: optional<string>
            docs: URL Encoded string of the string to match partially to the path
          limit:
            type: optional<integer>
            docs: Limit the returned request count (max 250)

    get:
      docs: |
        This endpoint retrieves a specific request.
        The response contains the data object with the properties body, headers, path 
        and query representing the original data for that request.
      method: GET
      path: /{id}
      path-parameters:
        id:
          type: commons.RequestId
          docs: Request ID
      response: Request

    getEvents:
      docs: This endpoint retries the events associated with a request.
      method: GET
      path: /{request_id}/events
      path-parameters:
        request_id:
          type: commons.RequestId
          docs: Request ID
      response: event.AllEvents
      request:
        name: GetRequestEventsRequest
        query-parameters:
          id:
            type: optional<commons.EventId>
            docs: Filter by event IDs
          webhook_id:
            type: optional<commons.ConnectionId>
            docs: Filter by webhook connection IDs
          source_id:
            type: optional<source.SourceId>
            docs: Filter by source IDs
          destination_id:
            type: optional<destination.DestinationId>
            docs: Filter by destination IDs
          cli_id:
            type: optional<commons.CliId>
            docs: |
              Filter by CLI IDs.
              ?[any]=true operator for any CLI.
              Defaults to null.
          status:
            type: optional<commons.RequestStatus>
            docs: Lifecyle status of the event.
          response_status:
            type: optional<integer>
            docs: Filter by HTTP response status code
          attempts:
            type: optional<integer>
            docs: Filter by number of attempts
          created_at:
            type: optional<datetime>
            docs: Filter by created_at date using a date operator
          successful_at:
            type: optional<datetime>
            docs: Filter by last_attempt_at date using a date operator
          last_attempt_at:
            type: optional<datetime>
            docs: Filter by last_attempt_at date using a date operator
          next_attempt_at:
            type: optional<datetime>
            docs: Filter by next_attempt_at date using a date operator
          headers:
            type: optional<string> #TODO EventHeaders
            docs: URL Encoded string of the JSON to match to the data headers
          parsed_query:
            type: optional<string>
            docs: URL Encoded string of the JSON to match to the parsed query (JSON
              representation of the query)
          path:
            type: optional<string>
            docs: URL Encoded string of the string to match partially to the path
          include:
            type: optional<string>
            docs: Include the data object in the event model
          limit:
            type: optional<string>
            docs: Limit the returned event count (max 250)
          order_by:
            type: optional<pagination.OrderBy>
            docs: Sort by created_at (default) or last_attempt_at.

    getIgnoredEvents:
      docs: This endpoint retries the events associated with a request.
      method: GET
      path: /{request_id}/ignored_events
      path-parameters:
        request_id: commons.RequestId
      request:
        name: GetRequestIgnoredEventsRequest
        query-parameters:
          id:
            type: optional<commons.EventId>
            docs: Filter by ignored events IDs
          limit:
            type: optional<string>
            docs: Limit the returned event count (max 250)
