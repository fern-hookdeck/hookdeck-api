# yaml-language-server: $schema=https://raw.githubusercontent.com/fern-api/fern/main/fern.schema.json

imports:
  commons: commons.yml
  pagination: pagination.yml

types:
  BulkRetryId:
    type: string
    docs: ID of the bulk retry

  BulkRetry:
    properties:
      id:
        type: BulkRetryId
        docs: ID of the bulk retry
      team_id:
        type: commons.TeamId
        docs: ID of the workspace
      query:
        type: unknown
        docs: Query object to filter events, use query parameters of Event
      updated_at:
        type: datetime
        docs: Last time the bulk retry was updated
      created_at:
        type: datetime
        docs: Date the bulk retry was created
      completed_at:
        type: datetime
        docs: Date the bulk retry was completed
      cancelled_at:
        type: datetime
        docs: Date the bulk retry was cancelled
      estimated_batch_count:
        type: integer
        docs: Number of batches required to complete the bulk retry
      processed_batch_count:
        type: integer
        docs: Number of batches currently processed
      estimated_event_count:
        type: integer
        docs: Number of estimated events to be retried
      delivered_event_count:
        type: integer
        docs: Number of events that were successfully delivered
      failed_event_count:
        type: integer
        docs: Number of events that failed to be delivered
      completed_event_id:
        type: commons.EventId
        docs: Id of the last event to be processed in the bulk retry
      last_processed_event_id:
        type: commons.EventId
        docs: Id of the last event processed during the last batch operation
      progress:
        type: integer
        docs: Progression of the batch operations, values 0 - 1
      in_progress:
        type: boolean
        docs: Indicates if the bulk retry is currently in progress

  AllBulkRetry:
    extends: pagination.Pagination
    properties:
      count: integer
      model: list<BulkRetry>

  BulkRetryPlan:
    properties:
      estimated_event_count: integer
      estimated_batch_count: integer

service:
  docs: |
    A bulk retry re-attempts delivery for one or more events, based on a filter.
    Events on paused connections will still be retried unless excluded from the query.
  base-path: /bulk/events/retry
  auth: true
  endpoints:
    getAll:
      docs: |
        A bulk retry re-attempts delivery for one or more events, based on a filter.
        Events on paused connections will still be retried unless excluded from the query.
      method: GET
      path: ""
      display-name: Get All Bulk Retries
      response: AllBulkRetry
      request:
        name: GetAllBulkRetryRequest
        query-parameters:
          id:
            type: optional<BulkRetryId>
            docs: ID of the bulk retry
          query:
            type: optional<string> # consider changing to unknown
            docs: Filter filter for events to be included in the bulk retry, use query
              parameters of Event
          query_partial_match:
            type: optional<boolean>
            docs: Allow partial filter match on query property
          cancelled_at:
            type: optional<datetime>
            docs: Filter by date the bulk retry was cancelled
          completed_at:
            type: optional<datetime>
            docs: Filter by date the bulk retry completed
          created_at:
            type: optional<datetime>
            docs: Filter by date the bulk retry was created
          in_progress:
            type: boolean
            docs: Indicates if the bulk retry is currently in progress
          limit:
            type: integer
            docs: Limit the returned event count (max 250)

    get:
      docs: This endpoint retrieves a specific bulk retry.
      method: GET
      path: /{id}
      path-parameters:
        id:
          type: BulkRetryId
          docs: Bulk retry ID
      response: BulkRetry

    generatePlan:
      docs: |
        This endpoint estimates the number of events that will be 
        retried with the given query parameters.
      method: GET
      path: /plan
      response: BulkRetryPlan
      request:
        name: GenerateBulkRetryPlanRequest
        query-parameters:
          query:
            type: optional<string> #TODO consider changing to unknown
            docs: Filter by the bulk retry events query object, use query parameters of
              Event

    create:
      docs: |
        This endpoint creates a bulk retry.
        Creating a bulk retry automatically begins the operation to retry any events matching the specified filters.
      method: POST
      path: ""
      request:
        name: CreateBulkRetryRequest
        body:
          properties:
            query:
              type: unknown
              docs: Filter properties for the events to be included in the bulk retry
      response: BulkRetry

    cancel:
      docs: This endpoint stops a bulk retry if it's currently running.
      method: POST
      path: /{id}/cancel
      path-parameters:
        id:
          type: BulkRetryId
          docs: Bulk retry ID
      response: BulkRetry
